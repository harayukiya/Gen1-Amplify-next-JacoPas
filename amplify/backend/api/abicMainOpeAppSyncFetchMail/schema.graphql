type Mail {
	id_mail: String!
	st_fromaddress: String
	st_touser: String
	st_ccuser: String
	st_subject: String
	st_contents: String
	fg_attachments: String
	st_attachments: AWSJSON
	fg_unzipped: String
	st_password: String
	st_objectkeys: AWSJSON
	dt_receive: String
	dt_insert: String
	dt_update: String
}

type MailConnection {
	items: [Mail]
	nextToken: String
}

input ModelSizeInput {
	ne: Int
	eq: Int
	le: Int
	lt: Int
	ge: Int
	gt: Int
	between: [Int]
}

input TableMailFilterInput {
	id_mail: TableStringFilterInput
	st_fromaddress: TableStringFilterInput
	st_touser: TableStringFilterInput
	st_ccuser: TableStringFilterInput
	st_subject: TableStringFilterInput
	st_contents: TableStringFilterInput
	fg_attachments: TableStringFilterInput
	fg_unzipped: TableStringFilterInput
	st_password: TableStringFilterInput
	dt_receive: TableStringFilterInput
	dt_insert: TableStringFilterInput
	dt_update: TableStringFilterInput
}

input TableStringFilterInput {
	ne: String
	eq: String
	le: String
	lt: String
	ge: String
	gt: String
	contains: String
	notContains: String
	between: [String]
	beginsWith: String
	attributeExists: Boolean
	size: ModelSizeInput
}

type Query {
	getMail(id_mail: String!): Mail
	listMails(filter: TableMailFilterInput, limit: Int, nextToken: String): MailConnection
}